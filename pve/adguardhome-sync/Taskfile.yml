---
version: '3'

dotenv:
  - .env

tasks:
  bootstrap:
    desc: Bootstrap {{ .SERVICE_NAME }}
    cmds:
      - task: init
      - task: install
      - task: install-service
      - task: reload
      - task: start
  decrypt:
    desc: Decrypt sensitive configuration files using SOPS.
    preconditions:
      - test -f .env.enc
      - test -f adguardhome-sync.yaml.enc
    cmds:
      - sops -d --input-type dotenv --output-type dotenv .env.enc > .env
      - sops -d --input-type yaml --output-type yaml adguardhome-sync.yaml.enc > adguardhome-sync.yaml
    ignore_error: true
  encrypt:
    desc: Encrypt sensitive configuration files using SOPS.
    preconditions:
      - test -f .env
      - test -f adguardhome-sync.yaml
    cmds:
      - sops -e .env > .env.enc
      - sops -e adguardhome-sync.yaml > adguardhome-sync.yaml.enc
  export:
    silent: true
    desc: Export the task list to `task-list.txt`.
    cmds:
      - task --list > task-list.txt
  init:
    desc: Initialize the application's environment and configuration files.
    cmds:
      - cp .env.tmpl .env
  install:
    desc: Install {{ .SERVICE_NAME }}
    cmds:
      - "curl {{ .INSTALLER_URL }} | bash"
  install-service:
    desc: Install the application's systemd service.
    preconditions:
      - test -f ./adguardhome-sync.service
    cmds:
      - "sudo cp ./adguardhome-sync.service /etc/systemd/system/"
      - task: enable
  reload:
    desc: Reload the application's systemd service.
    cmds:
      - sudo systemctl daemon-reload
  enable:
    desc: Enable the application's systemd service.
    cmds:
      - sudo systemctl enable {{ .SERVICE_NAME }}.service
  restart:
    desc: Restart the application's systemd service.
    cmds:
      - sudo systemctl restart {{ .SERVICE_NAME }}.service
  status:
    desc: Get the service status
    cmds:
      - sudo systemctl status {{ .SERVICE_NAME }}.service
  start:
    desc: Start the application's systemd service.
    cmds:
      - sudo systemctl start {{ .SERVICE_NAME }}.service
  stop:
    desc: Stop the application's systemd service.
    cmds:
      - sudo systemctl stop {{ .SERVICE_NAME }}.service
  update:
    desc: Update {{ .SERVICE_NAME }}
    cmds:
      - ./update.sh
  default:
    cmds:
      - task -l
    silent: true
    desc: List all available tasks.
